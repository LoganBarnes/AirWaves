language: c++

branches:
  only:
    - master

dist: trusty

matrix:
  - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libasound2
            - alsa-utils
            - alsa-oss
            - libasound2-dev
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

  - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
            - libasound2
            - alsa-utils
            - alsa-oss
            - libasound2-dev
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

#  - os: osx
#      osx_image: xcode8
#      env:
#        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"
#
#  - os: osx
#      osx_image: xcode8

before_install:
    - eval "${MATRIX_EVAL}"

    ############################################################################
    # Update OS X homebrew
    ############################################################################
    - |
      if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
        brew update
      fi

install:
  ############################################################################
  # All compiled dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew outdated cmake || brew upgrade cmake
    fi
  - cmake --version

script:
  - mkdir cmake-build-debug
  - cd cmake-build-debug
  - cmake -DCMAKE_BUILD_TYPE=Debug -DVMP_BUILD_TESTS=ON ..
  - make -j
  - ./vmp-tests
  - cd ..

  - mkdir cmake-build-release
  - cd cmake-build-release
  - cmake -DCMAKE_BUILD_TYPE=Release -DVMP_BUILD_TESTS=ON ..
  - make -j
  - ./vmp-tests
  - cd ..


notifications:
  on_success: never
  on_failure: always
