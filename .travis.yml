# Need these for a more recent CMake on Linux
language: c++

branches:
  only:
    - master

dist: trusty

# Save common build configurations as shortcuts, so we can reference them later.
addons_shortcuts:
  addons_clang38: &clang38
    apt:
      sources: [ 'llvm-toolchain-trusty-3.8' ]
      packages: [ 'clang-3.8', 'libc++-dev' ]
  addons_clang39: &clang39
    apt:
      sources: [ 'llvm-toolchain-trusty-3.9' ]
      packages: [ 'clang-3.9', 'libc++-dev' ]
  addons_clang35: &clang40
    apt:
      sources: [ 'llvm-toolchain-trusty-4.0' ]
      packages: [ 'clang-4.0', 'libc++-dev' ]
  addons_gcc49: &gcc49
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'gcc-4.9', 'g++-4.9' ]
  addons_gcc5: &gcc5
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'gcc-5', 'g++-5' ]
  addons_gcc6: &gcc6
    apt:
      sources: [ 'ubuntu-toolchain-r-test' ]
      packages: [ 'gcc-6', 'g++-6', 'doxygen' ]

matrix:
  include:
    # - os: osx
    #   osx_image: xcode6
    #   compiler: clang
    # - os: osx
    #   osx_image: xcode7
    #   compiler: clang
    - os: osx
      osx_image: xcode8
      compiler: clang
      env: SCRIPT_OPTIONS="-sf -t"
    - os: linux
      compiler: "clang-3.8"
      env: SCRIPT_OPTIONS="-sf -t" CXXFLAGS=-stdlib=libc++
      addons: *clang38
    # - os: linux
    #   compiler: "clang-3.9"
    #   env: CXXFLAGS=-stdlib=libc++
    #   addons: *clang39
    # - os: linux
    #   compiler: "clang-4.0"
    #   env: CXXFLAGS=-stdlib=libc++
    #   addons: *clang40
    # - os: linux
    #   compiler: "g++-4.9"
    #   env: GCC=4.9
    #   addons: *gcc49
    # - os: linux
    #   compiler: "g++-5"
    #   env: GCC=5
    #   addons: *gcc5
    # - os: linux
    #   compiler: "g++-6"
    #   env: GCC=6
    #   addons: *gcc6

    # # SHARED LIBS
    # - os: osx
    #   osx_image: xcode8
    #   compiler: clang
    #   env: SHARED=ON
    # - os: linux
    #   compiler: "clang-3.8"
    #   env: CXXFLAGS=-stdlib=libc++ SHARED=ON
    #   addons: *clang38

    # # DEBUG
    # - os: osx
    #   osx_image: xcode8
    #   compiler: clang
    #   env: BUILD_TYPE=Debug
    # - os: linux
    #   compiler: "clang-3.8"
    #   env: CXXFLAGS=-stdlib=libc++ BUILD_TYPE=Debug
    #   addons: *clang38

    # # DEBUG SHARED LIBS
    # - os: osx
    #   osx_image: xcode8
    #   compiler: clang
    #   env: SHARED=ON BUILD_TYPE=Debug
    # - os: linux
    #   compiler: "clang-3.8"
    #   env: CXXFLAGS=-stdlib=libc++ SHARED=ON BUILD_TYPE=Debug
    #   addons: *clang38


install:
  ############################################################################
  # All compiled dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

before_script:
  - cd ${TRAVIS_BUILD_DIR}/run

script:
  - ./unixConfigureAndBuild.sh ${SCRIPT_OPTIONS}
  # run tests if they were created
  - |
    if [ -f testbin/testAirWaves ]; then
      ./testbin/testAirWaves
    fi

notifications:
  on_success: never
  on_failure: always
